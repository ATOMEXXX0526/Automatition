version: '3.8'

services:
  ai-assistant:
    build:
      context: ..
      dockerfile: ai_assistant/Dockerfile
    container_name: naumen-ai-assistant
    ports:
      - "5000:5000"  # Flask API
      - "9090:9090"  # Prometheus metrics
    environment:
      # Flask
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=false

      # Naumen API
      - NAUMEN_URL=${NAUMEN_URL:-https://naumen.company.kz}
      - NAUMEN_API_KEY=${NAUMEN_API_KEY}
      - NAUMEN_VERIFY_SSL=${NAUMEN_VERIFY_SSL:-true}

      # AI настройки
      - AUTO_APPLY_THRESHOLD=${AUTO_APPLY_THRESHOLD:-0.80}
      - MIN_CONFIDENCE_THRESHOLD=${MIN_CONFIDENCE_THRESHOLD:-0.50}

      # Логирование
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=json

      # Метрики
      - METRICS_ENABLED=true
      - METRICS_PORT=9090

      # Режим работы
      - DRY_RUN_MODE=${DRY_RUN_MODE:-false}

    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./data:/app/data

    restart: unless-stopped

    networks:
      - naumen-network

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Опционально: Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    container_name: naumen-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - naumen-network
    profiles:
      - monitoring

  # Опционально: Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: naumen-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - naumen-network
    profiles:
      - monitoring

networks:
  naumen-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
